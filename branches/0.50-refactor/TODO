TODO for module-refactoring:
* Implement something along the lines of POEs named args for functions and call all 
module-functions with these. Something like:

Anna.pm:
let MSG = 0;
export MSG;

Module.pm:
&$sub($msg);

Module:
use Anna;
sub foo {
	my $msg = $_[MSG];
}

* Implement support for binding regexps
* Remove need to specify module-name when calling bind-functions from modules. Anna should
  take care of that itself (perhaps irssi-style, through an %info?)
* Dynamic module-loading (that is, allow admins to issue 'load foo' to load module foo)
  For the time being, the loading-stuff is working, but has to be called manually from 
  anna.pl. 
  
  Anna should load all modules from core/ and auto/ pr. default, when starting.
  
  Perhaps we should make a loader-module, that takes care of from-irc-loading. This should
  be a core-module that binds the load-command, and then issues Anna::Module::load after
  rights-checking and the like.

* EXTENSIVE TESTING OF MODULE-RELATED FAILURES (e.g. modules crashing, failing to compile,
  doing funky stuff when loaded, issuing 'die' at weird times and so on).

* Move existing stuff into modules
