The Heap
--------
The heap will be passed as the first argument whenever a module-function is 
called. From the heap, there will be access to the bots configuration, database
handle and more.

The basic layout are as follows:

#$heap->{config}
#Holds a reference to the configuration object of the bot. From here, you can 
#read and write configuration-details. Refer to the config-documentation for 
#more info on this.
REPLACE WITH ACTUAL CONFIG-STUFF

$heap->{irc}
Holds a reference to the active irc-object. You should rarely, if ever have 
need for this, but from here, you can issue commands to the PoCo::IRC-session.
Use with care and refer to Poe::Component::IRC's docs for more info.

$heap->{dbh}
Holds a reference to the active database-handle as returned by the DBI-module.
Use this to access the bot's database.

#$heap->{auth}
#The heapspace for authentications. Refer to the auth-docs for more info on the 
#layout of this.
REPLACE WITH ACTUAL AUTH-STUFF

$heap->{log}
This is the logfile for the core of anna... don't mess with it.

$heap->{modules}
This holds the local storage-space for each loaded bot-module. 
$heap->{module}->{[MODULE_NAME]} holds a reference to a hash for use by the
individual modules themselves. To keep this clean (and for other hopefully 
obvious reasons), the bot will refuse to load a module if an already loaded 
module has the same name.
$heap->{module}->{log} contains an object the module can write log-messages to.
The format is quite simple, $heap->{module}->{log}->write(<your_message>). This
returns 1 on success, 0 otherwise. If the bot-owner have decided to turn off 
logging, the object will still exist and the write will return 1, but nothing 
will be written to the logfile. Refer to the module-docs for more info on this.

Network-structure in the heap
-----------------------------
The heap will reflect the general network-structure in the following way:
$heap->{network}->{$network}->{$target} where target is any channel or person 
Anna^ talks with.
Each target will have a log-entry: ...->{$target}->{log} which points to the 
log-object associated with the target.
